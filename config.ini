[userFunctions]
Import = js/rsa.js
Import = js/test.js

[commandSequence]
Sequence = invalid_auth, check_token, refresh_token, ticket, asset_id, landing, session, shell_var, good_upload, js_func_add, js_func_sub, js_pkcs_gen, js_pkcs_enc, js_pkcs_dec

#default values that carry over to all the api call definitions below
[command "default"]
ReqType = POST
ReqContentType = application/x-www-form-urlencoded
MsecDelay = 1

[command "invalid_auth"]
ReqUrl = /reqapi/check/token
ReqHeaders = Authorization: Basic xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx==
ReqHeaders = auth-request-check: eyJwdWxzZVNlcnZlciI6ICJodHRwczovL2FwaS1kci5hZHRwdWxzZS5jb20iLCAiZGV2aWNlU2VjcmV0IjoiZDkzZjczOTktMGRlYy00NjUyLTg1NjgtNzc2OGNhNjIwOWU3In0=
ReqBody = access_type=password&password={%ARGS[0]}&username={%ARGS[0]}
ResponseCode = 401

#first api to call
[command "check_token"]
ReqUrl = /reqapi/check/token
ReqHeaders = Authorization: Basic YWI0YzRlMDAtZDhhNi0xMWU0LWE5NmMtMzRmYjUwOWMyMGNhOg==
ReqHeaders = auth-request-check: eyJwdWxzZVNlcnZlciI6ICJodHRwczovL2FwaS1kci5hZHRwdWxzZS5jb20iLCAiZGV2aWNlU2VjcmV0IjoiZDkzZjczOTktMGRlYy00NjUyLTg1NjgtNzc2OGNhNjIwOWU3In0=
ReqBody = access_type=password&password={%ARGS[0]}&username={%ARGS[0]}
#GrepVar = Refresh_Tok refresh_token.:.([a-z0-9-]+)
SessionVar = Refresh_Tok refresh_token.:.([a-z0-9-]+)
MustCapture = Refresh_Tok
MsecDelay = 1

#second, ...
[command "refresh_token"]
ReqUrl = /reqapi/check/token?access_type=refresh_token&refresh_token={%Refresh_Tok}
ReqHeaders = Authorization: Basic YWI0YzRlMDAtZDhhNi0xMWU0LWE5NmMtMzRmYjUwOWMyMGNhOg==
#GrepVar = ACCESS_T access_token.:.([a-z0-9-]+)
SessionVar = ACCESS_T access_token.:.([a-z0-9-]+)
MustCapture = ACCESS_T
MsecDelay = 10

[command "ticket"]
ReqUrl = /reqapi/test/account/pass?call_id={%ARGS[0]}
ReqHeaders = Authorization: Carier {%ACCESS_T}
#GrepVar = PASS pass.:.([a-z0-9-]+)
#GrepVar = AUTHORIZATION authorization.:.([a-z0-9-]+)
SessionVar = PASS pass.:.([a-z0-9-]+)

[command "asset_id"]
ReqUrl = /reqapi/test/account/pass/{%PASS}/push
#ReqHeaders = Authorization: Carier {%AUTH1}
#GrepVar = X-REQ X-Request-ID:.([a-z0-9-/=]+)
SessionVar = XID PATH=([a-z0-9-/=]+)
MsecRepeat = 10

[command "landing"]
ReqUrl = /main

[command "session"]
ReqUrl = /GetSession

[command "shell_var"]
ReqUrl = /reqapi/test/shellVar?shellVar={$shellVar}
SessionVar = ABCD (test123)
MustCapture = ABCD

[command "good_upload"]
ReqUrl = /reqapi/test/upload
ReqUpload = README.md
ReqHeaders = Content-Type: text/markdown

[command "js_func_add"]
#requires a config.js file with the following function
#function add(a, b, c) {return parseFloat(a) + parseFloat(b) + parseFloat(c)}
FuncVar = ADDTEST add(1,2,3)
ReqUrl = /general?testAnswer={%ADDTEST}&actualAnswer=6
SessionVar = ADDCHECK Success
MustCapture = ADDCHECK

[command "js_func_sub"]
#requires a config.js file with the following function
#function sub(a, b) {return parseFloat(a) - parseFloat(b)}
FuncVar = ADDTEST sub(2,3)
ReqUrl = /general?testAnswer={%ADDTEST}&actualAnswer=-1
SessionVar = ADDCHECK Success
MustCapture = ADDCHECK

#requires a rsa.js file
[command "js_pkcs_gen"]
FuncVar = FENCKEY rsa.genKey(256)
ReqUrl = /general?testAnswer={%FENCKEY}&actualAnswer={%FENCKEY}
SessionVar = ENCKEY Success (.*)
MustCapture = ENCKEY

[command "js_pkcs_enc"]
FuncVar = ENCTEST rsa.encryptHex(hello, {%ENCKEY})
ReqUrl = /general?testAnswer={%ENCTEST}&actualAnswer={%ENCTEST}
SessionVar = ENCRYPTED Success (.*)
MustCapture = ENCRYPTED

[command "js_pkcs_dec"]
FuncVar = DECTEST rsa.decryptHex({%ENCRYPTED}, {%ENCKEY})
ReqUrl = /general?testAnswer={%DECTEST}&actualAnswer=hello
SessionVar = DECCHECK Success
MustCapture = DECCHECK
